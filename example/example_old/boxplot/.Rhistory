?save_plot
ggplotGrod
?ggplotGrod
??ggplotGrod
library(ggplot2)
?draw_plot()
letters[1:3]
LETTERS[1:3]
save_plot()
?scale_x_continuous()
library(ggplot2)
help("barplot")
barplot(height = cbind(x = c(465, 91) / 465 * 100,
y = c(840, 200) / 840 * 100,
z = c(37, 17) / 37 * 100),
beside = FALSE,
width = c(465, 840, 37),
col = c(1, 2),
legend.text = c("A", "B"),
args.legend = list(x = "topleft"))
barplot(height = cbind(x = c(465, 91) / 465 * 100,
y = c(840, 200) / 840 * 100,
z = c(37, 17) / 37 * 100),
beside = T,
width = c(465, 840, 37),
col = c(1, 2),
legend.text = c("A", "B"),
args.legend = list(x = "topleft"))
barplot(height = cbind(x = c(465, 91) / 465 * 100,
y = c(840, 200) / 840 * 100,
z = c(37, 17) / 37 * 100),
beside = T,
width = c(1,200),
col = c(1, 2),
legend.text = c("A", "B"),
args.legend = list(x = "topleft"))
barplot(height = cbind(x = c(465, 91) / 465 * 100,
y = c(840, 200) / 840 * 100,
z = c(37, 17) / 37 * 100),
beside = T,
width = list(c(1,200),c(200,1),c(100,100)),
col = c(1, 2),
legend.text = c("A", "B"),
args.legend = list(x = "topleft"))
install.packages(c("curl", "DBI", "devtools", "dplyr", "evaluate", "foreign", "gdata", "ggsignif", "h2o", "hunspell", "janeaustenr", "jsonlite", "mapproj", "maps", "pcaPP", "R6", "sp", "tibble", "tidytext"))
install.packages("ggimage")
install.packages("qrcode")
devtools::install_github("GuangchuangYu/yyplot")
install.packages("installr")
library(installr)
updateR()
install.packages("installr")
updateR()
update()
install.packages("installr")
.libPaths()
install.packages(c("car", "httpuv"))
install.packages(c("foreign", "Matrix"), lib="/usr/local/Cellar/r/3.4.0_1/R.framework/Versions/3.4/Resources/library")
install.packages("installr")
library(ggplot2)
example("ggplot2")
help("ggplot2")
help("ggplot2-ggproto")
help("ggplot2")
help(geom_bar)
g <- ggplot(mpg, aes(class))
# Number of cars in each class:
g + geom_bar()
# Total engine displacement of each class
g + geom_bar(aes(weight = displ))
library(ggplot2)
example("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
example("ggplot2")
example("ggplot2")
help(ggplot2)
libarary(ggplot2)
library(ggplot2)
example("ggplot2")
help(ggplot2)
help(geom_bar)
g <- ggplot(mpg, aes(class))
# Number of cars in each class:
g + geom_bar()
install.packages("qrcode")
devtools::install_github("GuangchuangYu/yyplot")
require(ggplot2) require(ggimage) require(yyplot)
require(ggplot2)
require(ggimage)
library(ggvis)
install.packages("ggimage")
require(ggimage)
install.packages("EBImage")
source("http://bioconductor.org/biocLite.R")
biocLite("EBImage")
biocLite("EBImage")
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
source("/opt/tools/r_function.R")
bio("EBImage")
update.packages( )
update.packages()
bio("EBImage")
bio
bio(ggimage)
bio("ggimage")
install.packages("fftwtools")
bio("ggimage")
install.packages("ggimage") install.packages("devtools") install.packages("qrcode")
install.packages("grcode")
bio("grcode")
install.packages("qrcode")
devtools::install_github("GuangchuangYu/yyplot")
devtools::install_github("GuangchuangYu/yyplot",force=TRUE)
library(ggplot2)
library(ggimage)
library(yyplot)
ggqrcode("我喜欢你")
ggqrcode(r"我喜欢你")
ggqrcode(u"我喜欢你")
ggqrcode(u"I love you")
ggqrcode("I love you")
.packages(all.available = T)
c("ggplot2") %in% .packages(all.available = T)
help("match")
match(c("ggplot2"),.packages(all.available = T))
if (c("ggplot2") %in% .packages(all.available = T)){}
if (c("ggplot2") %in% .packages(all.available = T)){print("df")}
install.packages()
install.packages("ggplot2")
if (c("ggplot2") %in% .packages(all.available = T)){print("df")}
if (!c("ggplot2") %in% .packages(all.available = T)){print("df")}
force=T
force ==True
force == TRUE
for (i in c("ggplot2","reshape2")){
print(i)
}
installp <- function(packagelist,force=F){
for (package in packagelist)
if (!package %in% .packages(all.available = T) || force == T){
install.packages(package,repo="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")
}else{
print(paste(package," has been installed!",sep=""))
}
}
installp(c("ggplot2","reshape2"))
installp(c("ggplot2","reshape2","dd"))
installp(c("ggplot2","reshape2","dd"))
installp <- function(packagelist,force=F){
for (package in packagelist){
if (!package %in% .packages(all.available = T) || force == T){
install.packages(package,repo="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")
}else{
print(paste(package," has been installed!",sep=""))
}
}
}
installp("ggplot2")
library(ggplot2)
?ggsave
set("/opt/bin/s-plot/example/boxplot/")
setgt("/opt/bin/s-plot/example/boxplot/")
setwd("/opt/bin/s-plot/example/boxplot/")
dir()
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names=1)
data<- read.table(file="boxplot.normal.data",sep="\t", header=$header,row.names=1, quote="", check.names=F)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE,row.names=1, quote="", check.names=F)
dim(data)
dim(sampleGroup)
temp<-melt(data)
library(dplyr)
library(reshape)
library(reshape2)
temp<-melt(data)
head(temp)
dim(temp)
dd<- merge(temp,sampleGroup)
dim(dd)
head(dd)
head(sampleGroup)
rownames(temp) <-temp$variable
sampleGroup[dd$variable]
sampleGroup[dd$variable,]
aa<- sampleGroup[dd$variable,]
dd<- merge(temp,aa)
dim(dd)
dim(temp)
head(temp)
head(aa)
head(sampleGroup)
sampleGroup["zygote_1",]
as.character()dd$variable)
as.character(dd$variable)
temp(dd)
dim(dd)
dim(temp)
as.character(temp$variable)
sampleGroup[as.character(temp$variable),]
dd<-sampleGroup[as.character(temp$variable),]
bb<- merge(temp,dd)
dim(bb)
dim(dd)
dim(dd)
sampleGroup[as.character(temp$variable),]
sampleGroup[as.character(temp$variable)]
sampleGroup[as.character(temp$variable),:]
sampleGroup
sampleGroup[1,]
sampleGroup[1:3,]
sampleGroup[1:3,"group"]
sampleGroup[1:10,"group"]
sampleGroup[[1]
sampleGroup[[1]]
sampleGroup[[1,]]
as.data.frame(sampleGroup[1:10,"group"])
as.data.frame(sampleGroup[1:10,])
sampleGroup
sampleGroup$Sample<- rownames(sampleGroup)
sampleGroup[1:10,]
dd<- sampleGroup[as.character(temp$variable),]
dim(dd)
bb<- merge(temp,dd)
dim(bb)
dim(bb)
dim(dd)
dim(temp)
?merge
head(temp)
head(dd)
dd$value<-temp$value
head(dd)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE,row.names=1, quote="", check.names=F)
temp<-melt(data)
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names=1)temp<-melt(data)
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names=1)
sampleGroup$Sample<- rownames(sampleGroup)
dd<- sampleGroup[as.character(temp$variable),]
bb<- merge(temp,dd)
dim(bb)
dd
dim(dd)
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names=1)
sampleGroup$Sample<- rownames(sampleGroup)
dd<- sampleGroup[as.character(temp$variable),]
dd$value<-temp$value
head(dd)
sampleGroup$variable<- rownames(sampleGroup)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE,row.names=1, quote="", check.names=F)
temp<-melt(data)
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names=1)
head(sampleGroup)
data_m<- sampleGroup[as.character(temp$variable),]
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE,row.names=1, quote="", check.names=F)
temp<-melt(data)
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names=1)
sampleGroup$variable<- rownames(sampleGroup)
data_m<- sampleGroup[as.character(temp$variable),]
data_m$value<-temp$value
head(data_m)
head(temp)
head(data)
data$gene<-rownames(data)
head(data)
melt(data,id.vars = "gene")
head(melt(data,id.vars = "gene"))
?melt
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
head(melt(data,id.vars = "Name"))
temp
dfdf<-melt(data,id.vars = "Name")
head(dfdf)
dfdf.head()
dfdf['Name']
head(dfdf['Name'])
head(dfdf)
dfdf[c('Name')]
dfdf[c('Name',"value")]
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE,row.names=1, quote="", check.names=F)
temp<-melt(data,id.vars = '')
head(temp)
head(data)
")
dfdf<-melt(data,id.vars = c("Name","2cell_3")
?melt
dfdf.head()
head(dfdf['Name'])
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
dfdf<-melt(data,id.vars = c("Name","2cell_3")
?melt
dfdf.head()
head(dfdf['Name'])
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
dfdf<-melt(data,id.vars = c("Name","2cell_3")
dfdf.head()
head(dfdf['Name'])
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
dfdf<-melt(data,id.vars = c("Name","2cell_3"))
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE,row.names=1, quote="", check.names=F)
temp<-melt(data,id.vars = '')
head(temp)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
temp<-melt(data,id.vars = '')
head(temp)
temp<-melt(data,id.vars = '')
temp<-melt(data)
head(temp)
temp<-melt(data,id.vars = "Name")
head(temp)
dim(temp)
temp<-melt(data)
head(temp)
dim(temp)
?join
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names=1)
head(sampleGroup)
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F)
head(sampleGroup)
head(temp)
join(temp,sampleGroup,by=c("variable","Sample"))
library(dplyr)
join(temp,sampleGroup,by=c("variable","Sample"))
left_join(temp,sampleGroup,by=c("variable","Sample"))
left_join(temp,sampleGroup,by=c("variable"="Sample"))
aa <-left_join(temp,sampleGroup,by=c("variable"="Sample"))
head(aa)
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names = 1)
head(sampleGroup)
sampleGroup$variable<- rownames(sampleGroup)
aa <-left_join(temp,sampleGroup,by="variable")
head(sampleGroup)
aa <-left_join(temp,sampleGroup,by="variable")
head(aa)
dim(aa)
sampleGroup$variable<- factor(rownames(sampleGroup)
sampleGroup$variable
aa <-left_join(temp,sampleGroup,by="variable")
head(aa)
sampleGroup$variable<- rownames(sampleGroup)
data_m<- sampleGroup[as.character(temp$variable),]
data_m$value<-temp$value
head(data_m)
data$gene<-rownames(data)
head(data)
dfdf<-melt(data,id.vars = c("Name","2cell_3"))
dfdf.head()
head(dfdf['Name'])
head(data)
sampleGroup$variable<- factor(rownames(sampleGroup))
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names = 1)
sampleGroup$variable<- factor(rownames(sampleGroup))
aa <-left_join(temp,sampleGroup,by="variable")
head(aa)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F,row.names = 1)
head(data)
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names = 1)
head(sampleGroup)
temp<-melt(data)
head(temp)
data_m <- as.data.frame(t(data["A", ]))
data_m$Sample = rownames(data_m)
head(data_m)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
data_m <- as.data.frame(t(data["A", ]))
data_m$Sample = rownames(data_m)
head(data_m)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
temp<-melt(data)
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names = 1)
sampleGroup$variable<- factor(rownames(sampleGroup))
aa <-left_join(temp,sampleGroup,by="variable")
head(aa)
head(temp)
head(temp$)
head(temp$Name)
head(temp$variable)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
temp<-melt(data)
head(temp$variable)
head(temp)
temp<-melt(data,id.vars = "GeType")
head(temp)
head(data)
temp<-melt(data)
head(temp)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
temp<-melt(data)
head(temp)
data[data$Name=="A",]
as.data.frame(data[data$Name=="A",])
as.data.frame(t(data[data$Name=="A",]))
?read.table
data <- read.table(file="${file}", sep="\t", header=$header, row.names=1, quote="", check.names=F,skip=2)
data <- read.table(file="${file}", sep="\t", header=$header, row.names=1, quote="", check.names=F,skip=1)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F,skip=1)
head(data)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F,skip=1)
head(data)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F,nrows=1)
head(data)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F,nrows=-1)
head(data)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
head(data[-1])
head(data[-2])
head(data[-1:-2])
data<- data[-1:-2]
temp<-melt(data)
head(temp)
range(2)
data<- data[-1:-1]
data
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data[-1:-1],2)
head(data)
split("Name:2")
split("Name:2",':')
split("Name:2",':')
?split
strsplit("Name:2",":")
strsplit("Name:2",":")[[1]]
strsplit("Name:2",":")[[1]][1]
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
data<- read.table(file="boxplot.normal.data2",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
data <- read.table(file="${file}", sep="\t", header=$header, row.names=1, quote="", check.names=F)
as.data.frame(t(data[data['Name']=="A",]))
as.data.frame(t(data[data['Name']=="A",]))[2:]
as.data.frame(t(data[data['Name']=="A",]))[2:,]
as.data.frame(t(data[data['Name']=="A",]))[-1:-2,]
data <- read.table(file="${file}", sep="\t", header=$header, row.names=1, quote="", check.names=F)
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
as.data.frame(t(data[data['Name']=="A",]))[-1:-2,]
as.data.frame(t(data[data['Name']=="A",]))[-1:-2,]
as.data.frame(t(data[data['Name']=="A",]))[-1:-2,])
as.data.frame(t(data[data['Name']=="A",]))[-1:-2,]
as.data.frame(t(data[data['Name']=="A",]))
[-1:-2,]
as.data.frame(t(data[data['Name']=="A",]))[-1:-2,]
data_m <- as.data.frame(t(data[data['Name']=="A",]))[-1:-2,]
head(data)
head(data_m)
colnames(data_m)
rownames(data_m)
data_m <- as.data.frame(t(data[data['Name']=="A",]))
rownames(data_m)
data_m <- as.data.frame(t(data[data['Name']=="A",]))
rownames(data_m)
data_m
data_m\$Sample = rownames(data_m)
data_m$Sample = rownames(data_m)
data_m
data_m[-1:-2]
data_m[-1:-2,]
colnames(data_m)<-"value"
data_m <- as.data.frame(t(data[data['Name']=="A",]))
colnames(data_m)<-"value"
data_m$Sample = rownames(data_m)
data_m[-1:-2,]
sampleGroup<- read.table("sampleGroup",sep="\t",header=1,check.names=F,row.names = 1)
data_m
merge(data_m, sampleGroup, by="row.names")
as.numeric(data_m$value)
as.double(data_m$value)
data_m
as.double(data_m$value)
as.integer(data_m$value)
levels(data_m$value)
as.integer(data_m$value[-1:-2])
as.numeric(data_m$value[-1:-2])
?as.data.frame
data_m <- as.data.frame(t(data[data['Name']=="A",]),stringsAsFactors=F)
as.integer(data_m$value[-1:-2])
data_m$value[-1:-2]
data_m$
data_m
data_m$1
data_m[1,]
data_m[1]
data_m[1][2:]
data_m[1][2:,]
data_m[1][2:-1,]
data_m[1][-1:-2,]
as.numeric(data_m[1][-1:-2,])
data_m[-1:-2,]
colnames(data_m)<-"value"
data_m$Sample = rownames(data_m)
data_m[-1:-2,]
data<- read.table(file="boxplot.normal.data",sep="\t", header=TRUE, quote="", check.names=F)
head(data)
head(data[-1:-2])
data
nlevelssampleGroup)
nlevels(sampleGroup$Group)
